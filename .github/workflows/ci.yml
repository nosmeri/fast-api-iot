name: FastAPI CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    env:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydb
      SQLALCHEMY_DATABASE_URL: postgresql://myuser:mypassword@localhost:5432/mydb
      JWT_SECRET_KEY: testsecretkey
      JWT_EXPIRES_IN_HOURS: 24

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r app/requirements.txt
        pip install pytest pytest-env

    - name: Debug
      run: |
        pwd
        ls -R

    - name: Run Pytest
      run: |
        pytest

    - name: Build Docker image (optional, for consistency)
      run: docker build -t my-image-name:latest .

    - name: Deploy to Raspberry Pi (only on push to master)
      if: github.event_name == 'push'
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd ~/fast-api-testweb
          git pull
          docker-compose down
          docker-compose up -d --build